#!/bin/bash

function export_aws_env() {
	if export_output=$(aws configure export-credentials --profile "$1" --format env 2>/dev/null); then
		eval "$export_output"
		echo "AWS environment variables exported"
	else
		echo "Failed to export AWS environment variables"
		return 1
	fi
}

# Case 1: Already authenticated
if aws sts get-caller-identity --profile "$1" >/dev/null 2>&1; then
	echo "Already authenticated with profile: $1"
	export_aws_env "$1"
	return $?
fi

# Case 2: Not authenticated
echo "Logging in with profile: $1"
aws sso login --profile "$1" &

# Wait until Arc becomes the active application
osascript <<EOF
tell application "System Events"
    repeat until (name of first application process whose frontmost is true) is "Arc"
        delay 0.125
    end repeat
end tell
EOF

osascript <<EOF
tell application "Arc"
    -- Wait for the initial SSO page to load
    repeat until (loading of front window's active tab) is false
        delay 0.125
    end repeat

    -- May not be necessary anymore...
    -- set initialPageLoaded to false
    -- repeat until initialPageLoaded
    --     delay 0.125
    --     tell the active tab of the front window
    --         set initialPageLoaded to (execute javascript "
    --             !!document.querySelector('#cli_verification_btn')
    --         ") as boolean
    --     end tell
    -- end repeat

    tell the active tab of the front window
        execute javascript "document.querySelector('#cli_verification_btn').click();"
    end tell

    -- Wait for the next page to load
    set pageLoaded to false
    repeat until pageLoaded
        delay 0.125
        tell the active tab of the front window
            set pageLoaded to (execute javascript "
                !!document.querySelector('[data-testid=\"allow-access-button\"]')
            ") as boolean
        end tell
    end repeat

    tell the active tab of the front window
        execute javascript "document.querySelector('[data-testid=\"allow-access-button\"]').click();"
    end tell

    delay 0.25

    tell the front window
      close the active tab
    end tell
end tell
EOF

# Wait for the login to complete
wait

# Check if login was successful
if ! aws sts get-caller-identity --profile "$1" >/dev/null 2>&1; then
	echo "SSO login failed"
	return 1
fi

# Export AWS environment variables
export_aws_env "$1"
